{"ast":null,"code":"var _jsxFileName = \"/home/felipe/Downloads/Semana Omnistack/project/frontend/src/pages/Feed.js\";\nimport React, { Component } from 'react';\nimport api from '../services/api';\nimport io from 'socket.io-client';\nimport './Feed.css';\nimport more from \"../assets/more.svg\";\nimport like from \"../assets/like.svg\";\nimport comment from \"../assets/comment.svg\";\nimport send from \"../assets/send.svg\";\n\nclass Feed extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      feed: []\n    };\n\n    this.registerToSocket = () => {\n      const socket = io('http://localhost:3030');\n      socket.on('post', newPost => {\n        this.setState({});\n      });\n    };\n\n    this.handleLike = id => {\n      api.post(\"/posts/\".concat(id, \"/like\"));\n    };\n  }\n\n  async componentDidMount() {\n    this.registerToSocket();\n    const response = await api.get('posts');\n    this.setState({\n      feed: response.data\n    });\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      id: \"post-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.state.feed.map(post => React.createElement(\"article\", {\n      key: post._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, post.author), React.createElement(\"span\", {\n      className: \"place\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, post.place)), React.createElement(\"img\", {\n      src: more,\n      alt: \"Mais\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"img\", {\n      src: \"http://localhost:3030/files/\".concat(post.image),\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"footer\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleLike(post._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: like,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"img\", {\n      src: comment,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: send,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, post.likes, \" curtidas\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, post.description, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, post.hashtags))))));\n  }\n\n}\n\nexport default Feed;","map":{"version":3,"sources":["/home/felipe/Downloads/Semana Omnistack/project/frontend/src/pages/Feed.js"],"names":["React","Component","api","io","Feed","state","feed","registerToSocket","socket","on","newPost","setState","handleLike","id","post","componentDidMount","response","get","data","render","map","_id","author","place","more","image","like","comment","send","likes","description","hashtags"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport api from '../services/api';\nimport io from 'socket.io-client';\nimport './Feed.css';\n\nimport more from '../assets/more.svg';\nimport like from '../assets/like.svg';\nimport comment from '../assets/comment.svg';\nimport send from '../assets/send.svg';\n\nclass Feed extends Component {\n\n    state = {\n\n        feed: [],\n    };\n\n    async componentDidMount(){\n\n        this.registerToSocket();\n\n        const response = await api.get('posts');\n\n        this.setState({\n\n            feed: response.data\n        })\n    }\n\n    registerToSocket = () => {\n\n        const socket = io('http://localhost:3030');\n\n        socket.on('post', newPost => {\n\n            this.setState({\n                \n            })\n        })\n    }\n\n    handleLike = id => {\n\n        api.post(`/posts/${id}/like`)\n    }\n\n    render(){\n\n        return(\n            \n            <section id=\"post-list\">\n                { this.state.feed.map(post => (\n                    <article key = { post._id }>\n\n                        <header>\n\n                            <div className=\"user-info\">\n\n                                <span>{post.author}</span>\n                                <span className=\"place\">{post.place}</span>\n                            </div>\n\n                            <img src={more} alt=\"Mais\" />\n                        </header>\n\n                        <img src={`http://localhost:3030/files/${post.image}`} alt=\"\" />\n\n                        <footer>\n\n                            <div className=\"actions\">\n\n                                <button type=\"button\" onClick={() => this.handleLike(post._id)}>\n                                    <img src={like} alt=\"\" />\n                                </button>\n                                <img src={comment} alt=\"\" />\n                                <img src={send} alt=\"\" />\n                            </div>\n\n                            <strong>{post.likes} curtidas</strong>\n\n                            <p>\n\n                                {post.description}\n                                <span>{post.hashtags}</span>\n                            </p>\n                        </footer>\n                    </article>\n                )) }\n            </section>\n        )\n    }\n}\n\nexport default Feed;\n"]},"metadata":{},"sourceType":"module"}